{"version":3,"sources":["RequestApi/Winrate.js","RequestApi/SearchSumaryPlayers.js","RequestApi.js","App.js","index.js"],"names":["Winrate","a","value","apiKey","hostUrl","proxy","gameMode","console","log","search","obj","win_rate","ranking_rate","media_gpm","media_xpm","media_kills","media_deaths","media_last_hists","media_denies","media_hero_damage","media_hero_healing","media_net_worth","media_tower_damage","media_assists","i","fetch","then","response","json","data","x","result","matches","z","j","length","match_id","player_slot","players","filter","account_id","push","catch","error","message","search_History","k","radiant_win","y","assists","gold_per_min","xp_per_min","kills","deaths","last_hits","denies","hero_damage","hero_healing","net_worth","tower_damage","Object","keys","forEach","key","parseInt","parseFloat","toFixed","compilation","SteamID","require","SearchSumaryPlayer","IdConverter","id","accountid","avatarfull","personaname","profileurl","steamid","undefined","RequestApi","win","player","App","useState","dateWin","setDateWin","datePlayer","setDatePlayer","delay","setDelay","setValue","button","useEffect","className","type","onChange","e","target","placeholder","onClick","href","style","textDecoration","color","src","height","alt","class","map","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b4dc707.chunk.js","sourcesContent":["const Winrate = async  ({value,apiKey,hostUrl,proxy,gameMode})=>{\r\n    console.log('Winrate',value)\r\n    const search = async ()=>{\r\n        let obj = {\r\n            win_rate : 0,\r\n            ranking_rate: 0,\r\n            media_gpm : 0,\r\n            media_xpm : 0,\r\n            media_kills : 0,\r\n            media_deaths : 0,\r\n            media_last_hists : 0,\r\n            media_denies : 0,\r\n            media_hero_damage : 0,\r\n            media_hero_healing : 0,\r\n            media_net_worth : 0,\r\n            media_tower_damage : 0,\r\n            media_assists : 0,\r\n        }   \r\n        for(let i=0;i<1;i++){\r\n            let search_History = await fetch(`${proxy}${hostUrl}/IDOTA2Match_570/GetMatchHistory/v1?account_id=${value}&game_mode=${gameMode}&key=${apiKey}`)           \r\n            .then((response)=>{return  response.json()})\r\n            .then((data)=>{\r\n                console.log('search_History')\r\n                let x = data.result.matches\r\n                let z = []\r\n                for(let j=0;j<x.length;j++){\r\n                    \r\n                    let {match_id,players} = data.result.matches[j]\r\n                    let y = players.filter(x => x.account_id === value)[0]\r\n                    let {player_slot} = y\r\n                    z.push({match_id,player_slot})\r\n                }\r\n                return(z)\r\n            })\r\n            .catch((error)=>{console.log(error.message);return undefined});\r\n            \r\n            \r\n            \r\n            for(let k=0;k<1;k++){ \r\n                await fetch(`${proxy}${hostUrl}/IDOTA2Match_570/GetMatchDetails/v1?match_id=${search_History[k].match_id}&key=${apiKey}`)\r\n                \r\n                .then((response)=>{return  response.json()})\r\n                .then((data)=>{\r\n                    console.log('search_Match')\r\n                    let {radiant_win,players} = data.result                     \r\n                    let y = players.filter(x => x.account_id === value)[0]\r\n                    \r\n                    let {assists,gold_per_min,xp_per_min,kills,deaths,last_hits,denies,hero_damage,hero_healing,net_worth,tower_damage} = y\r\n                    \r\n                    obj.media_assists += assists/100\r\n                    obj.media_gpm += gold_per_min/100\r\n                    obj.media_xpm += xp_per_min/100\r\n                    obj.media_kills += kills/100\r\n                    obj.media_deaths += -deaths/100\r\n                    obj.media_last_hists += last_hits/100\r\n                    obj.media_denies += denies/100\r\n                    obj.media_hero_damage += hero_damage/100\r\n                    obj.media_hero_healing += hero_healing/100\r\n                    obj.media_net_worth += net_worth/100\r\n                    obj.media_tower_damage += tower_damage/100\r\n                    \r\n                    if(radiant_win){if(search_History[k].player_slot<5){obj.win_rate+=1}}\r\n                    else{if(search_History[k].player_slot>5){obj.win_rate+=1}}\r\n                    \r\n                })\r\n                .catch((error)=>{console.log(error.message)}); \r\n            }\r\n            \r\n            Object.keys(obj).forEach((key) => {\r\n                if(key!== 'winrate' && key !== obj.ranking_rate){\r\n                    if(key === 'media_assists'){\r\n                        obj.ranking_rate += obj[key]*100*5\r\n                    }\r\n                    else if(key === 'media_kills'){\r\n                        obj.ranking_rate += obj[key]*100\r\n                    }\r\n                    else if(key === 'media_deaths'){\r\n                        obj.ranking_rate += obj[key]*100*0.5 \r\n                    }\r\n                    else if(key === 'media_hero_damage'){\r\n                        obj.ranking_rate += obj[key]/10 \r\n                    }\r\n                    else if(key === 'media_net_worth'){\r\n                        obj.ranking_rate += obj[key]/10 \r\n                    }\r\n                    else{\r\n                        obj.ranking_rate += obj[key]\r\n                    }                    \r\n                }\r\n            });\r\n            \r\n            obj.ranking_rate = parseInt(obj.ranking_rate*obj.win_rate)\r\n            obj.media_gpm = parseFloat((obj.media_gpm).toFixed(0))\r\n            obj.media_xpm = parseFloat((obj.media_xpm).toFixed(0))\r\n            obj.media_kills = parseFloat((obj.media_kills).toFixed(2))\r\n            obj.media_deaths = parseFloat((obj.media_deaths).toFixed(2))\r\n            obj.media_last_hists = parseFloat((obj.media_last_hists).toFixed(2))\r\n            obj.media_denies = parseFloat((obj.media_denies).toFixed(2))\r\n            obj.media_hero_damage = parseFloat((obj.media_hero_damage).toFixed(0))\r\n            obj.media_hero_healing = parseFloat((obj.media_hero_healing).toFixed(0))\r\n            obj.media_net_worth = parseFloat((obj.media_net_worth).toFixed(0))\r\n            obj.media_tower_damage = parseFloat((obj.media_tower_damage).toFixed(0))\r\n            obj.win_rate = parseFloat((obj.win_rate).toFixed(2))+\"%\"\r\n            obj.media_assists = parseFloat((obj.media_assists).toFixed(2))\r\n            \r\n        }\r\n        return (obj)\r\n    }\r\n    const compilation  = await search()\r\n    const result = await compilation\r\n    return(result)\r\n    \r\n}\r\nexport default Winrate;\r\n\r\n","const SteamID = require('steamid');\r\nconst SearchSumaryPlayer = async({value,apiKey,hostUrl,proxy})=>{\r\n    console.log('SearchSumary')\r\n    \r\n    const IdConverter = async()=>{\r\n        let id = new SteamID(`[U:1:${value}]`);\r\n        console.log(id)\r\n        return(id)\r\n    }\r\n    let accountid = await IdConverter()\r\n\r\n    console.log(accountid)\r\n    const search = async ()=>{        \r\n        let a = await fetch(`${proxy}${hostUrl}/ISteamUser/GetPlayerSummaries/v0002/?key=${apiKey}&steamids=${accountid}`)\r\n        .then((response)=>{return  response.json()})\r\n        .then((data)=>{\r\n            let x = data.response.players[0]\r\n            console.log('search Profile')\r\n            let {avatarfull,personaname,profileurl,steamid} = x\r\n            let players = {avatarfull,personaname,profileurl,steamid}\r\n            if(x!==undefined){                             \r\n                return(players)\r\n            }          \r\n        })\r\n        .catch(()=>{return false});        \r\n        return (await a)\r\n    }\r\n    const compilation  = await search()\r\n    const result = await compilation\r\n    return(await result)\r\n}\r\nexport default SearchSumaryPlayer;","import Winrate from './RequestApi/Winrate'\r\nimport SearchSumaryPlayer from './RequestApi/SearchSumaryPlayers'\r\nconst RequestApi= async ({value})=>{\r\n    const apiKey = '048776627077105958873BA4C749CEFF'\r\n    const hostUrl = 'http://api.steampowered.com'\r\n    //const proxy = 'https://cors-anywhere.herokuapp.com/'\r\n    const proxy = 'https://thingproxy.freeboard.io/fetch/'\r\n    const gameMode = 18\r\n    \r\n    let win = await Winrate({value,apiKey,hostUrl,proxy,gameMode})\r\n    let player = await SearchSumaryPlayer({value,apiKey,hostUrl,proxy,gameMode})\r\n    return({win,player})\r\n}\r\nexport default RequestApi;","import './Css/App.css';\nimport React, { useState, useEffect } from 'react';\nimport RequestApi from './RequestApi'\nconst App =  ()=> {\n  const [dateWin, setDateWin] = useState(false);\n  const [datePlayer, setDatePlayer] = useState(false);\n  const [delay, setDelay] = useState(false);\n  const [value, setValue] = useState(87683422);\n  \n  const input =(e)=>{\n    const {value}  = e.target\n    setValue(value)}\n    \n    const button = async()=>{\n      \n      if(value){\n        setDelay(true)\n        let {win,player} = await RequestApi({value})\n        setDelay(false)\n        setDateWin(win)\n        setDatePlayer(player)\n        console.log('click')\n      }\n    }\n    useEffect(() => {\n      \n      \n    },[]);\n    \n    return (\n      <div className=\"App\">\n      <div>\n      <input type='text' onChange={input} placeholder='ID DOTA'/>\n      <button onClick={button} type='button'>Buscar</button>\n      </div>\n      {dateWin && datePlayer &&\n        <div className='result'>\n        <div className='cabecalho'>\n        <a href={datePlayer.profileurl} style={{textDecoration: 'none',color:'black'}}>\n        <img src={datePlayer.avatarfull} height='100%' alt='a'/>\n        </a>\n        <h1>{datePlayer.personaname}</h1>\n        </div>\n        <table class=\"comicGreen\">\n        {\n          Object.keys(dateWin).map((key)=> {\n            return (\n              key !== 'win_rate' && key !== 'ranking_rate' \n              ?\n              <tr>\n              <td>{key}</td><td>{dateWin[key]}</td>\n              </tr>\n              :\n              <tr>\n              <td> \n              <h1>{key}</h1></td><td><h1>{dateWin[key]}</h1>\n              </td>\n              </tr>\n              )\n            })\n          }\n          </table>\n          </div>\n        }\n        {delay &&\n          <div style={{margin: '80px 0px',height:'50vh'}}>\n          <h3>Aguarde pode demorar...</h3>\n          <img src='https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif' alt='a'/>\n          </div>\n        }\n        </div>\n        );\n      }\n      \n      export default App;\n      ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Css/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}